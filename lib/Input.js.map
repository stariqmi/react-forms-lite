{"version":3,"sources":["../src/Input.js"],"names":[],"mappings":"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","file":"Input.js","sourcesContent":["// npm modules\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport DatePicker from 'react-datepicker';\nimport moment from 'moment';\n\nclass Input extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: '',\n            showErrorText: false\n        };\n        \n        if (this.props.type === 'datepicker') {\n            this.state.startDate = moment();\n            this.state.value = moment().format('YYYY/MM/DD');\n        }\n        \n        this.update = this.update.bind(this);\n    }\n    \n    update(e) {\n        let val;\n        if (this.props.type === 'datepicker') {\n            val = e.format('YYYY/MM/DD')\n            this.setState({startDate: e, value: val});\n        }\n        else {\n            val = e.target.value;\n            this.setState({value: e.target.value});\n        }\n        var isValid = this.props.validate(val);\n        if (!isValid) {\n            this.setState({showErrorText: true});\n        }\n        \n        this.props.updateForm(this.props.id, val, isValid);\n    }\n    \n    componentDidMount() {\n        this.props.updateForm(this.props.id, this.state.value, this.props.validate(this.state.value));\n    }\n    \n    render() {\n        let element;\n        let type = (this.props.type === 'datepicker') ? 'text' : this.props.type;\n        if (this.props.type === 'datepicker') {\n            element = <DatePicker \n                selected={this.state.startDate}\n                onChange={this.update}\n                className={this.props.className} />\n        }\n        else {\n            element = <input\n                        id={this.props.id}\n                        type={type}\n                        className={this.props.className}\n                        placeholder={this.props.placeholder}\n                        onChange={this.update}\n                        value={this.state.value}\n                    />\n        }\n        \n        return <div><label>{this.props.label}</label> {element}</div>;\n    }\n}\n\nInput.propTypes = {\n    id: React.PropTypes.string.isRequired,\n    label: React.PropTypes.string.isRequired,\n    className: React.PropTypes.string,\n    type: React.PropTypes.string,\n    required: React.PropTypes.bool,\n    placeholder: React.PropTypes.string,\n    validate: React.PropTypes.func,\n    errorText: React.PropTypes.string\n}\n\nInput.defaultProps = {\n    className: '',\n    type: 'text',\n    required: false,\n    placeholder: '',\n    validate: function(prop) {\n        // Default: not empty string\n        return prop !== '';\n    },\n    errorText: 'This field cannot be empty.'\n}\n\nexport default Input"]}