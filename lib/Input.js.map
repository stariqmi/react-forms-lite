{"version":3,"sources":["../src/Input.js"],"names":[],"mappings":"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","file":"Input.js","sourcesContent":["// npm modules\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport DatePicker from 'react-datepicker';\n\nimport MyDatePicker from './MyDatePicker.js';\n\nclass Input extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: '',\n            showErrorText: false\n        };\n        \n        this.update = this.update.bind(this);\n    }\n    \n    update(e) {\n        let val;\n        val = e.target.value;\n        this.setState({value: e.target.value});\n        var isValid = this.props.validate(val);\n        \n        this.props.updateForm(this.props.id, val, isValid);\n    }\n    \n    showErrors() {\n        this.setState({showErrorText: true});\n    }\n    \n    componentDidMount() {\n        let isValid = this.props.validate(this.state.value);\n        this.props.updateForm(this.props.id, this.state.value, isValid);\n    }\n    \n    render() {\n        let element;\n        let type = this.props.type;\n        \n        switch (type) {\n            case 'datepicker':\n                element = <MyDatePicker\n                    key={this.props.id}\n                    update={this.update}\n                    className={this.props.className} /> \n                break;\n            case 'select':\n                let options = [];\n                for (var i in this.props.options) {\n                    let option = this.props.options[i];\n                    options.push(<option key={option.value} value={option.value}>{option.label}</option>);\n                }\n                element = <select key={this.props.id} value={''} onChange={this.update}>{options}</select>\n                break;\n            case 'textarea':\n                element = <textarea key={this.props.id} onChange={this.update} />\n                break;\n            default:\n                element = <input\n                            key=\"input\"\n                            id={this.props.id}\n                            type={type}\n                            className={this.props.className}\n                            placeholder={this.props.placeholder}\n                            onChange={this.update}\n                            value={this.state.value}\n                        />\n        }\n        \n        let elements = [element];\n        if (this.state.showErrorText && !this.props.validate(this.state.value)) {\n            elements.push(<p key=\"error-text\" className=\"error-text\">{this.props.errorText}</p>);\n        }\n        \n        return <div className=\"rlf-field-container\">\n            <label>{this.props.label}</label> \n            <div className=\"input-wrapper\">{elements}</div>\n        </div>;\n    }\n}\n\nInput.propTypes = {\n    id: React.PropTypes.string.isRequired,\n    label: React.PropTypes.string.isRequired,\n    className: React.PropTypes.string,\n    type: React.PropTypes.string,\n    required: React.PropTypes.bool,\n    placeholder: React.PropTypes.string,\n    validate: React.PropTypes.func,\n    errorText: React.PropTypes.string,\n    options: React.PropTypes.array\n}\n\nInput.defaultProps = {\n    className: '',\n    type: 'text',\n    required: false,\n    placeholder: '',\n    validate: function(prop) {\n        // Default: not empty string\n        return prop !== '';\n    },\n    errorText: 'This field cannot be empty.'\n}\n\nexport default Input"]}